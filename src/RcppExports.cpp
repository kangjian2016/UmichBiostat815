// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Barzilai_Borwein_method_cpp
double Barzilai_Borwein_method_cpp(arma::vec& x, arma::vec& prev_x, arma::vec& grad_x, arma::vec& prev_grad_x, double step_size_lb);
RcppExport SEXP _UmichBiostat815_Barzilai_Borwein_method_cpp(SEXP xSEXP, SEXP prev_xSEXP, SEXP grad_xSEXP, SEXP prev_grad_xSEXP, SEXP step_size_lbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type prev_x(prev_xSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type grad_x(grad_xSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type prev_grad_x(prev_grad_xSEXP);
    Rcpp::traits::input_parameter< double >::type step_size_lb(step_size_lbSEXP);
    rcpp_result_gen = Rcpp::wrap(Barzilai_Borwein_method_cpp(x, prev_x, grad_x, prev_grad_x, step_size_lb));
    return rcpp_result_gen;
END_RCPP
}
// backtracking_line_search_cpp
double backtracking_line_search_cpp(arma::vec& paras, arma::vec& grad_paras, Rcpp::Function obj_fun, Rcpp::List& dat, double a, double b, int max_iter);
RcppExport SEXP _UmichBiostat815_backtracking_line_search_cpp(SEXP parasSEXP, SEXP grad_parasSEXP, SEXP obj_funSEXP, SEXP datSEXP, SEXP aSEXP, SEXP bSEXP, SEXP max_iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type paras(parasSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type grad_paras(grad_parasSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type obj_fun(obj_funSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type dat(datSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    rcpp_result_gen = Rcpp::wrap(backtracking_line_search_cpp(paras, grad_paras, obj_fun, dat, a, b, max_iter));
    return rcpp_result_gen;
END_RCPP
}
// gradient_descent_cpp
Rcpp::List gradient_descent_cpp(arma::vec paras, Rcpp::Function obj_fun, Rcpp::Function grad_fun, Rcpp::List& dat, Rcpp::CharacterVector step_size_method, int max_iter, double step_size, double tol, int verbose);
RcppExport SEXP _UmichBiostat815_gradient_descent_cpp(SEXP parasSEXP, SEXP obj_funSEXP, SEXP grad_funSEXP, SEXP datSEXP, SEXP step_size_methodSEXP, SEXP max_iterSEXP, SEXP step_sizeSEXP, SEXP tolSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type paras(parasSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type obj_fun(obj_funSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type grad_fun(grad_funSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type dat(datSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type step_size_method(step_size_methodSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type step_size(step_sizeSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(gradient_descent_cpp(paras, obj_fun, grad_fun, dat, step_size_method, max_iter, step_size, tol, verbose));
    return rcpp_result_gen;
END_RCPP
}
// sgd_cpp
Rcpp::List sgd_cpp(arma::vec paras, Rcpp::Function obj_fun, Rcpp::Function grad_fun, Rcpp::List& dat, Rcpp::CharacterVector step_size_method, int n, int max_iter, int mini_batch_size, int update_freq, double weight, double step_size, double diminishing_ratio, double r, double tol, int burnin, int verbose);
RcppExport SEXP _UmichBiostat815_sgd_cpp(SEXP parasSEXP, SEXP obj_funSEXP, SEXP grad_funSEXP, SEXP datSEXP, SEXP step_size_methodSEXP, SEXP nSEXP, SEXP max_iterSEXP, SEXP mini_batch_sizeSEXP, SEXP update_freqSEXP, SEXP weightSEXP, SEXP step_sizeSEXP, SEXP diminishing_ratioSEXP, SEXP rSEXP, SEXP tolSEXP, SEXP burninSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type paras(parasSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type obj_fun(obj_funSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type grad_fun(grad_funSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type dat(datSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type step_size_method(step_size_methodSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< int >::type mini_batch_size(mini_batch_sizeSEXP);
    Rcpp::traits::input_parameter< int >::type update_freq(update_freqSEXP);
    Rcpp::traits::input_parameter< double >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< double >::type step_size(step_sizeSEXP);
    Rcpp::traits::input_parameter< double >::type diminishing_ratio(diminishing_ratioSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(sgd_cpp(paras, obj_fun, grad_fun, dat, step_size_method, n, max_iter, mini_batch_size, update_freq, weight, step_size, diminishing_ratio, r, tol, burnin, verbose));
    return rcpp_result_gen;
END_RCPP
}
// ridge_reg_loss_cpp
double ridge_reg_loss_cpp(arma::vec& beta, Rcpp::List& dat, Rcpp::IntegerVector idx_R);
RcppExport SEXP _UmichBiostat815_ridge_reg_loss_cpp(SEXP betaSEXP, SEXP datSEXP, SEXP idx_RSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type dat(datSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type idx_R(idx_RSEXP);
    rcpp_result_gen = Rcpp::wrap(ridge_reg_loss_cpp(beta, dat, idx_R));
    return rcpp_result_gen;
END_RCPP
}
// grad_ridge_reg_loss_cpp
arma::vec grad_ridge_reg_loss_cpp(arma::vec& beta, Rcpp::List& dat, Rcpp::IntegerVector idx_R);
RcppExport SEXP _UmichBiostat815_grad_ridge_reg_loss_cpp(SEXP betaSEXP, SEXP datSEXP, SEXP idx_RSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type dat(datSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type idx_R(idx_RSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_ridge_reg_loss_cpp(beta, dat, idx_R));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_UmichBiostat815_Barzilai_Borwein_method_cpp", (DL_FUNC) &_UmichBiostat815_Barzilai_Borwein_method_cpp, 5},
    {"_UmichBiostat815_backtracking_line_search_cpp", (DL_FUNC) &_UmichBiostat815_backtracking_line_search_cpp, 7},
    {"_UmichBiostat815_gradient_descent_cpp", (DL_FUNC) &_UmichBiostat815_gradient_descent_cpp, 9},
    {"_UmichBiostat815_sgd_cpp", (DL_FUNC) &_UmichBiostat815_sgd_cpp, 16},
    {"_UmichBiostat815_ridge_reg_loss_cpp", (DL_FUNC) &_UmichBiostat815_ridge_reg_loss_cpp, 3},
    {"_UmichBiostat815_grad_ridge_reg_loss_cpp", (DL_FUNC) &_UmichBiostat815_grad_ridge_reg_loss_cpp, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_UmichBiostat815(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
