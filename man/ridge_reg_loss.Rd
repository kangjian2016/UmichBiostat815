% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/UmichBiostat815.R
\name{ridge_reg_loss}
\alias{ridge_reg_loss}
\title{Evaluate loss function for ridge regression}
\usage{
ridge_reg_loss(intercept, regcoef, lambda, y, X)
}
\arguments{
\item{intercept}{numeric scalar}

\item{regcoef}{numeric vector of length p}

\item{lambda}{numeric scalar tuning parameter}

\item{y}{numeric vector for n observations of the response variable}

\item{X}{covariate matrix of dimension n by p}
}
\value{
value of the loss function ||y - X*beta||^2_2/n + lambda*||X beta||^2_2/2
}
\description{
Evaluate loss function for ridge regression
}
\examples{
library(glmnet)
set.seed(2023)
regdat <- simul_linear_reg(regcoef = c(rep(c(1,-1),length=10),rep(0,length=990)),
intercept = 2, 
n = 100, R_sq = 0.9)
lambda <- 0.04
res_glmnet <- with(regdat,glmnet(x=X,y=y,lambda=lambda,alpha=0.0))
res_solve <- with(regdat, linear_ridge_reg(y = y, X = X, lambda = lambda,method="solve"))
res_solve_p <- with(regdat, linear_ridge_reg(y = y, X = X, lambda = lambda,method="solve-large-p"))
loss <- list()
loss$glmnet <- with(res_glmnet,ridge_reg_loss(intercept=a0,regcoef=beta,lambda=lambda,regdat$y,regdat$X))
loss$solve <- with(res_solve,ridge_reg_loss(intercept,regcoef,lambda=lambda,regdat$y,regdat$X))
loss$solve_p <- with(res_solve_p,ridge_reg_loss(intercept,regcoef,lambda=lambda,regdat$y,regdat$X))
loss$true <- with(regdat,ridge_reg_loss(intercept,regcoef,lambda=lambda,y,X))
print(as.data.frame(loss))
mse <- list()
mse$glmnet <- mean((res_glmnet$beta - regdat$regcoef)^2)
mse$solve <- mean((res_solve$regcoef - regdat$regcoef)^2)
mse$solve_p <- mean((res_solve_p$regcoef - regdat$regcoef)^2)
print(as.data.frame(mse))
}
\author{
Jian Kang <jiankang@umich.edu>
}
